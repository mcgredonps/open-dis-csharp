--- Marking.java	2009-02-19 14:31:38.000000000 -0800
+++ Marking.java.txt	2009-02-19 14:29:01.000000000 -0800
@@ -46,9 +46,41 @@
 { return characterSet; 
 }
 
-public void setCharacters(byte[] pCharacters)
-{ characters = pCharacters;
+/**
+ * Ensure what is set does not go over 11 characters -- post-processing patch
+ * @param pCharacters an array of characters to set
+ */
+public void setCharacters(byte[] pCharacters) 
+{
+  if (pCharacters.length >= characters.length) 
+  {
+            System.arraycopy(pCharacters, 0, characters, 0, characters.length);
+  } 
+  else 
+  {
+    int pCharactersLength = pCharacters.length;
+    System.arraycopy(pCharacters, 0, characters, 0, pCharactersLength);
+    for (int ix = pCharactersLength; ix < characters.length; ix++) 
+    {
+        // Ensure all zeros in unfilled fields
+        characters[ix] = 0;
+    }
+  }
 }
+ 
+/**
+ * An added convieniece method (added by patch): accepts a string, and either
+ * truncates or zero-fills it to fit into the 11-byte character marking field.
+ * @param marking the marking string, converted internally into a character array that
+ * is exactly 11 bytes long
+ */
+public void setCharacters(String marking)
+{
+    byte[] buff = marking.getBytes();
+    this.setCharacters(buff);
+}
+    
+
 
 @XmlElement(name="characters" )
 public byte[] getCharacters()
